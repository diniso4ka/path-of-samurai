{"version":3,"file":"static/js/94.c0b612e1.chunk.js","mappings":"oMACA,GAAgB,gBAAkB,kC,kDCAlC,GAAiB,E,mBC0DjB,EAtDoB,SAAC,GAAY,IAAVA,EAAS,EAATA,GACbC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKA,IAAf,IAC9B,GAA+BC,EAAAA,EAAAA,KAC3B,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,aAAlB,IADDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAGVC,GAAWC,EAAAA,EAAAA,MACjB,EAA8BC,EAAAA,UAAe,GAA7C,eAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,EAAAA,SAAe,IAAzC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAc,WAChBD,EAASP,EACZ,EAEKS,EAAW,yCAAG,sFAChBJ,GAAYD,GACRJ,IAAeM,EAFH,gCAGNL,GAASS,EAAAA,EAAAA,IAAUJ,IAHb,uBAINL,GAASU,EAAAA,EAAAA,IAAUlB,IAJb,2CAAH,qDAiBjB,OATAU,EAAAA,WAAgB,WACZF,GAASU,EAAAA,EAAAA,IAAUlB,IACnBe,GACH,GAAE,IAEHL,EAAAA,WAAgB,WACZK,GACH,GAAE,CAACR,IAEW,YAAXD,GACO,yCAIP,oBAASa,UAAWC,EAAAA,QAApB,SACKT,GAAWX,IAAOC,EAAKD,IACpB,iCACI,kBACIqB,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOV,MAAtB,EACXA,MAAOA,EACPW,KAAM,UAEV,mBAAQC,QAAST,EAAjB,sBAGJ,cAAGS,QAAS,kBAAMb,GAAYD,EAAlB,EAAZ,SACKE,GAAgB,YAKpC,ECxDD,GAAgB,aAAe,2BAA2B,aAAe,2BAA2B,OAAS,qBAAqB,WAAa,yBAAyB,aAAe,4B,UCkCvL,EAhCa,SAAC,GAAc,IAAZa,EAAW,EAAXA,KAEZ,OADAC,QAAQC,IAAIF,IAER,qBAASP,UAAWC,EAAAA,aAApB,WACI,gBACIS,IAAKH,EAAKI,OAAOC,MAAQL,EAAKI,OAAOC,MAAQC,EAC7Cb,UAAWC,EAAAA,UAEf,iBAAKD,UAAWC,EAAAA,aAAhB,WACI,cAAGD,UAAWC,EAAAA,WAAd,SAA6BM,EAAKO,YAClC,gBAAId,UAAWC,EAAAA,SAAf,WACI,gBAAID,UAAWC,EAAAA,aAAf,uBACeM,EAAKQ,SAASC,aAE7B,gBAAIhB,UAAWC,EAAAA,aAAf,qBACaM,EAAKQ,SAASE,WAE3B,gBAAIjB,UAAWC,EAAAA,aAAf,wBACgBM,EAAKQ,SAASG,cAE9B,gBAAIlB,UAAWC,EAAAA,aAAf,iBAAoCM,EAAKQ,SAASI,UAEtD,cAAGnB,UAAWC,EAAAA,eAAd,SACKM,EAAKa,eAAL,6BAC2Bb,EAAKc,2BAC3B,UAKzB,EChCD,EAA0B,2BAA1B,EAAkE,8BCAlE,EAA0B,0BAA1B,EAA6D,yBAA7D,EAA6F,uBAA7F,EAA2H,uBCe3H,EAbiB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC/B,OACG,qBAASxB,UAAWC,EAApB,WACG,gBAAKS,IAAKa,GAAkB,6HAAmDvB,UAAWC,KAC1F,4BACG,cAAGD,UAAWC,EAAd,SAAuBuB,KACvB,cAAGxB,UAAWC,EAAd,SAAuBqB,SAKlC,ECbD,EAA0B,8BCiB1B,EAfqB,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACzCC,EAAiBrC,EAAAA,SAEvB,OACG,qBAASS,UAAWC,EAApB,WACG,kBACG4B,IAAKD,EACLlC,MAAOiC,EACPzB,SAAU,kBAAMwB,EAAaE,EAAeE,QAAQpC,MAA1C,EACVW,KAAK,UACR,mBAAQC,QAASmB,EAAjB,oBAGR,ECOD,GAAeM,EAAAA,EAAAA,KAjBO,SAAC/C,GACpB,MAAO,CACJ2C,YAAa3C,EAAMgD,QAAQL,YAEhC,IAEwB,SAACtC,GACvB,MAAO,CACJoC,WAAY,WACTpC,GAAS4C,EAAAA,EAAAA,MACX,EACDP,aAAc,SAACJ,GACZjC,GAAS6C,EAAAA,EAAAA,IAAkBZ,GAC7B,EAEN,GAED,CAA4Da,GCF5D,EAbkB,WACf,IAAQC,GAAUrD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,OAAjB,IAAtBmD,MAER,OACG,qBAASpC,UAAWC,EAApB,WACG,SAACoC,EAAD,KACA,gBAAKrC,UAAWC,EAAhB,SACImC,EAAME,KAAI,SAACxD,GAAD,OAAU,SAAC,EAAD,CAAU0C,KAAM1C,EAAK0C,KAAMF,KAAMxC,EAAKyD,QAAShB,OAAQzC,EAAKyC,OAASzC,EAAKyC,OAAS,IAASzC,EAAKD,GAA3G,QAItB,ECwBD,EA/BgB,WACZ,IAAMC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKA,IAAf,IAC9B,EAAwBS,EAAAA,SAAe,MAAvC,eAAOgB,EAAP,KAAaiC,EAAb,KACQ3D,GAAO4D,EAAAA,EAAAA,MAAP5D,GACF6D,GAAWC,EAAAA,EAAAA,MAcjB,OAZApD,EAAAA,WAAgB,WACRV,GACA+D,EAAAA,EAAAA,IAAU/D,GAAIgE,MAAK,SAAAC,GACfN,GAAQ,SAAAO,GAAI,iBAAUD,EAAV,GACf,KAEDF,EAAAA,EAAAA,IAAU9D,EAAKD,IAAIgE,MAAK,SAAAC,GACpBN,GAAQ,SAAAO,GAAI,iBAAUD,EAAV,GACf,GAER,GAAE,CAACJ,IAECnC,GAKD,kBAAMP,UAAS,UAAKC,EAAAA,gBAAL,YAA0BA,EAAAA,cAAzC,WACI,SAAC,EAAD,CAAMM,KAAMA,KACZ,SAAC,EAAD,CAAa1B,GAAIA,GAAUC,EAAKD,MAChC,SAAC,EAAD,QAPG,uCAUd,C","sources":["webpack://path-of-samurai/./src/pages/Profile/Profile.module.css?aa45","components/Profile/Status/StatusBlock.module.css","components/Profile/Status/StatusBlock.jsx","webpack://path-of-samurai/./src/components/Profile/Info/Info.module.css?f6fb","components/Profile/Info/Info.jsx","webpack://path-of-samurai/./src/components/Profile/Post/PostBlock/PostBlock.module.css?0934","webpack://path-of-samurai/./src/components/Profile/Post/PostItem/PostItem.module.css?91a7","components/Profile/Post/PostItem/PostItem.jsx","webpack://path-of-samurai/./src/components/Profile/Post/AddPostBlock/AddPostBlock.module.css?c118","components/Profile/Post/AddPostBlock/AddPostBlock.jsx","components/Profile/Post/AddPostBlock/AddPostContainer.jsx","components/Profile/Post/PostBlock/PostBlock.jsx","pages/Profile/Profile.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_wrapper\":\"Profile_profile_wrapper__1sQ9M\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\nimport s from './StatusBlock.module.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getStatus, setStatus } from '../../../redux/slices/profileSlice'\n\nconst StatusBlock = ({ id }) => {\n    const user = useSelector(state => state.user.user)\n    const { status, statusText } = useSelector(\n        state => state.profile.profileStatus\n    )\n    const dispatch = useDispatch()\n    const [editing, setEditing] = React.useState(false)\n    const [value, setValue] = React.useState('')\n\n    const checkStatus = () => {\n        setValue(statusText)\n    }\n\n    const onClickSend = async () => {\n        setEditing(!editing)\n        if (statusText !== value) {\n            await dispatch(setStatus(value))\n            await dispatch(getStatus(id))\n        }\n    }\n\n    React.useEffect(() => {\n        dispatch(getStatus(id))\n        checkStatus()\n    }, [])\n\n    React.useEffect(() => {\n        checkStatus()\n    }, [statusText])\n\n    if (status === 'loading') {\n        return <div>...loading</div>\n    }\n\n    return (\n        <section className={s.wrapper}>\n            {editing && id === user.id ? (\n                <>\n                    <input\n                        onChange={e => setValue(e.target.value)}\n                        value={value}\n                        type={'text'}\n                    />\n                    <button onClick={onClickSend}>edit</button>\n                </>\n            ) : (\n                <p onClick={() => setEditing(!editing)}>\n                    {value ? value : 'status'}\n                </p>\n            )}\n        </section>\n    )\n}\n\nexport default StatusBlock\n","// extracted by mini-css-extract-plugin\nexport default {\"info_wrapper\":\"Info_info_wrapper__T2N7o\",\"text_wrapper\":\"Info_text_wrapper__EPW6L\",\"avatar\":\"Info_avatar__4RCoU\",\"text__name\":\"Info_text__name__qIFfk\",\"contactsItem\":\"Info_contactsItem__RGUqV\"};","import s from './Info.module.css'\nimport React from 'react'\nimport userPhoto from '../../../assets/images/user.png'\nconst Info = ({ data }) => {\n    console.log(data)\n    return (\n        <section className={s.info_wrapper}>\n            <img\n                src={data.photos.large ? data.photos.large : userPhoto}\n                className={s.avatar}\n            ></img>\n            <div className={s.text_wrapper}>\n                <p className={s.text__name}>{data.fullName}</p>\n                <ul className={s.contacts}>\n                    <li className={s.contactsItem}>\n                        Facebook: {data.contacts.facebook}\n                    </li>\n                    <li className={s.contactsItem}>\n                        Github: {data.contacts.github}\n                    </li>\n                    <li className={s.contactsItem}>\n                        Instagram: {data.contacts.instagram}\n                    </li>\n                    <li className={s.contactsItem}>Vk: {data.contacts.vk}</li>\n                </ul>\n                <p className={s.text__birthday}>\n                    {data.lookingForAJob\n                        ? `Looking for a job: ${data.lookingForAJobDescription}`\n                        : ''}\n                </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Info\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PostBlock_wrapper__VnWJz\",\"post_items\":\"PostBlock_post_items__9TGFJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PostItem_wrapper__NOGvx\",\"avatar\":\"PostItem_avatar__67uKj\",\"text\":\"PostItem_text__ddKOV\",\"name\":\"PostItem_name__Ye5-m\"};","import React from 'react'\r\nimport s from './PostItem.module.css'\r\n\r\nconst PostItem = ({ text, avatar, name }) => {\r\n   return (\r\n      <section className={s.wrapper}>\r\n         <img src={avatar ? avatar : 'https://работазабкрай.рф/static/img/cabinet.png'} className={s.avatar} />\r\n         <div>\r\n            <p className={s.name}>{name}</p>\r\n            <p className={s.text}>{text}</p>\r\n         </div>\r\n\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default PostItem","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddPostBlock_wrapper__NuwqI\"};","import React from 'react'\r\nimport s from './AddPostBlock.module.css'\r\n\r\nconst AddPostBlock = ({ createPost, onPostChange, newPostText }) => {\r\n   const newPostElement = React.useRef()\r\n\r\n   return (\r\n      <section className={s.wrapper}>\r\n         <input\r\n            ref={newPostElement}\r\n            value={newPostText}\r\n            onChange={() => onPostChange(newPostElement.current.value)}\r\n            type='text' />\r\n         <button onClick={createPost}>send</button>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default AddPostBlock","import { addNewPost, updateNewPostText } from '../../../../redux/slices/profileSlice'\r\nimport { connect } from 'react-redux'\r\nimport AddPostBlock from './AddPostBlock'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      newPostText: state.dialogs.newPostText\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      createPost: () => {\r\n         dispatch(addNewPost())\r\n      },\r\n      onPostChange: (text) => {\r\n         dispatch(updateNewPostText(text))\r\n      }\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPostBlock)","import React from 'react'\r\nimport s from './PostBlock.module.css'\r\n\r\nimport PostItem from '../PostItem/PostItem'\r\nimport { useSelector } from 'react-redux'\r\nimport AddPostContainer from '../AddPostBlock/AddPostContainer'\r\n\r\n\r\nconst PostBlock = () => {\r\n   const { posts } = useSelector((state) => state.profile)\r\n\r\n   return (\r\n      <section className={s.wrapper}>\r\n         <AddPostContainer />\r\n         <div className={s.post_items}>\r\n            {posts.map((user) => <PostItem name={user.name} text={user.message} avatar={user.avatar ? user.avatar : ''} key={user.id} />)}\r\n         </div>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default PostBlock","import React from 'react'\nimport s from './Profile.module.css'\n\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { fetchUser } from '../../utils/axios/requests'\n\nimport StatusBlock from '../../components/Profile/Status/StatusBlock'\nimport Info from '../../components/Profile/Info/Info'\nimport PostBlock from '../../components/Profile/Post/PostBlock/PostBlock'\n\nconst Profile = () => {\n    const user = useSelector(state => state.user.user)\n    const [data, setData] = React.useState(null)\n    const { id } = useParams()\n    const location = useLocation()\n\n    React.useEffect(() => {\n        if (id) {\n            fetchUser(id).then(res => {\n                setData(prev => ({ ...res }))\n            })\n        } else {\n            fetchUser(user.id).then(res => {\n                setData(prev => ({ ...res }))\n            })\n        }\n    }, [location])\n\n    if (!data) {\n        return <div>Loading...</div>\n    }\n\n    return (\n        <main className={`${s.profile_wrapper} ${s.page_wrapper}`}>\n            <Info data={data} />\n            <StatusBlock id={id ? id : user.id} />\n            <PostBlock />\n        </main>\n    )\n}\n\nexport default Profile\n"],"names":["id","user","useSelector","state","profile","profileStatus","status","statusText","dispatch","useDispatch","React","editing","setEditing","value","setValue","checkStatus","onClickSend","setStatus","getStatus","className","s","onChange","e","target","type","onClick","data","console","log","src","photos","large","userPhoto","fullName","contacts","facebook","github","instagram","vk","lookingForAJob","lookingForAJobDescription","text","avatar","name","createPost","onPostChange","newPostText","newPostElement","ref","current","connect","dialogs","addNewPost","updateNewPostText","AddPostBlock","posts","AddPostContainer","map","message","setData","useParams","location","useLocation","fetchUser","then","res","prev"],"sourceRoot":""}