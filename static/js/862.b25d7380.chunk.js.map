{"version":3,"file":"static/js/862.b25d7380.chunk.js","mappings":"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","sources":["webpack://path-of-samurai/./src/components/Dialogs/Dialog/Dialog.module.css?19be","webpack://path-of-samurai/./src/components/Dialogs/MessageItem/MessageItem.module.css?481d","components/Dialogs/MessageItem/MessageItem.tsx","webpack://path-of-samurai/./src/components/Dialogs/SendMessageBlock/SendMessageBlock.module.css?38bf","components/Dialogs/SendMessageBlock/SendMessageBlock.tsx","components/Dialogs/SendMessageBlock/SendMessageContainer.tsx","components/Dialogs/Dialog/Dialog.tsx","webpack://path-of-samurai/./src/components/Dialogs/DialogMenu/DialogMenu.module.css?8643","webpack://path-of-samurai/./src/components/Dialogs/DialogMenuItem/DialogMenuItem.module.css?2453","components/Dialogs/DialogMenuItem/DialogMenuItem.tsx","components/Dialogs/DialogMenu/DialogMenu.tsx","webpack://path-of-samurai/./src/pages/Dialogs/Dialogs.module.css?3e4e","pages/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Dialog_wrapper__dQOqJ\",\"message_items\":\"Dialog_message_items__i5EWM\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MessageItem_wrapper__VO4sQ\",\"avatar\":\"MessageItem_avatar__kcA5t\",\"text\":\"MessageItem_text__-c31h\",\"name\":\"MessageItem_name__ScqAB\",\"active\":\"MessageItem_active__7Moli\"};","import s from './MessageItem.module.css'\nimport React from 'react'\n\ninterface IMessageItem {\n    name: string\n    text: string\n}\n\nconst MessageItem: React.FC<IMessageItem> = ({ name, text }) => {\n    return (\n        <section className={s.wrapper}>\n            <div>\n                <p className={s.name}>{name}</p>\n                <p className={s.text}>{text}</p>\n            </div>\n        </section>\n    )\n}\n\nexport default MessageItem\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"SendMessageBlock_wrapper__5VkFj\",\"text_input\":\"SendMessageBlock_text_input__XGgEp\"};","import React from 'react'\nimport s from './SendMessageBlock.module.css'\n\ninterface ISendMessageBlock {\n    username: string\n    newMessageText: string\n    sendMessage: (name: string) => void\n    onTextChange: (text: string) => void\n}\n\nconst SendMessageBlock: React.FC<ISendMessageBlock> = ({\n    username,\n    sendMessage,\n    onTextChange,\n    newMessageText,\n}) => {\n    const newMessageElement = React.useRef(null)\n    return (\n        <section className={s.wrapper}>\n            <input\n                onChange={() => onTextChange(newMessageElement.current.value)}\n                value={newMessageText}\n                ref={newMessageElement}\n                className={s.text_input}\n                type='text'\n            />\n            <button onClick={() => sendMessage(username)}>send</button>\n        </section>\n    )\n}\n\nexport default SendMessageBlock\n","import {\n    updateNewMessageText,\n    sendMessage,\n} from '../../../redux/slices/dialogsSlice'\nimport { connect } from 'react-redux'\nimport SendMessageBlock from './SendMessageBlock'\n\nlet mapStateToProps = state => {\n    return {\n        newMessageText: state.dialogs.newMessageText,\n        username: state.user.user.login,\n    }\n}\n\nlet mapDispatchToProps = dispatch => {\n    return {\n        sendMessage: name => {\n            dispatch(sendMessage(name))\n        },\n        onTextChange: text => {\n            dispatch(updateNewMessageText(text))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendMessageBlock)\n","import s from './Dialog.module.css'\nimport React from 'react'\nimport MessageItem from '../MessageItem/MessageItem'\n\nimport SendMessageContainer from '../SendMessageBlock/SendMessageContainer'\nimport { useAppSelector } from '../../../redux/hooks'\n\nconst Dialog: React.FC = () => {\n    const { messages } = useAppSelector(state => state.dialogs)\n    return (\n        <section className={s.wrapper}>\n            <div className={s.message_items}>\n                {messages.map(message => (\n                    <MessageItem\n                        key={message.id}\n                        name={message.name}\n                        text={message.message}\n                    />\n                ))}\n            </div>\n            <SendMessageContainer />\n        </section>\n    )\n}\n\nexport default Dialog\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DialogMenu_wrapper__ADnAP\",\"title\":\"DialogMenu_title__-I4Wk\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DialogMenuItem_wrapper__Om+dP\",\"avatar\":\"DialogMenuItem_avatar__2Bq0B\",\"text\":\"DialogMenuItem_text__Hd50S\",\"name\":\"DialogMenuItem_name__t1ptV\",\"active\":\"DialogMenuItem_active__BWwBz\"};","import s from './DialogMenuItem.module.css'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\ninterface IDialogMenuItemProps {\n    link: string\n    avatar: string\n    name: string\n    text: string\n    active: boolean\n    onClick: () => void\n}\n\nconst DialogMenuItem: React.FC<IDialogMenuItemProps> = ({\n    link,\n    avatar,\n    name,\n    text,\n    active,\n    onClick,\n}) => {\n    return (\n        <Link to={link} className={`${s.wrapper} ${active ? s.active : ''}`}>\n            <img\n                src={\n                    avatar\n                        ? avatar\n                        : 'https://работазабкрай.рф/static/img/cabinet.png'\n                }\n                className={s.avatar}\n            />\n            <div>\n                <p className={s.name}>{name}</p>\n                <p className={s.text}>{text}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default DialogMenuItem\n","import s from './DialogMenu.module.css'\nimport React from 'react'\n\nimport * as routes from '../../../utils/consts'\n\nimport DialogMenuItem from '../DialogMenuItem/DialogMenuItem'\nimport { useAppSelector } from '../../../redux/hooks'\n\nconst DialogMenu: React.FC = () => {\n    const { dialogs } = useAppSelector(state => state.dialogs)\n    const [active, setActive] = React.useState<number>(1)\n\n    return (\n        <section className={s.wrapper}>\n            <h2 className={s.title}>Messages</h2>\n            <div className={s.items}>\n                {dialogs.map(user => (\n                    <DialogMenuItem\n                        key={user.id}\n                        onClick={() => setActive(user.id)}\n                        link={`${routes.ROUTE_DIALOGS}/${user.id}`}\n                        name={user.name}\n                        text={user.message}\n                        avatar={user.avatar}\n                        active={active === user.id ? true : false}\n                    />\n                ))}\n            </div>\n        </section>\n    )\n}\n\nexport default DialogMenu\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__O95uK\"};","import React from 'react'\nimport Dialog from '../../components/Dialogs/Dialog/Dialog'\nimport DialogMenu from '../../components/Dialogs/DialogMenu/DialogMenu'\nimport s from './Dialogs.module.css'\n\nconst Dialogs: React.FC = () => {\n    return (\n        <main className={`${s.dialogs_wrapper} ${s.page_wrapper}`}>\n            <DialogMenu />\n            <Dialog />\n        </main>\n    )\n}\n\nexport default Dialogs\n"],"names":["name","text","className","s","username","sendMessage","onTextChange","newMessageText","newMessageElement","React","onChange","current","value","ref","type","onClick","connect","state","dialogs","user","login","dispatch","updateNewMessageText","SendMessageBlock","messages","useAppSelector","map","message","id","SendMessageContainer","link","avatar","active","to","src","setActive","routes"],"sourceRoot":""}