{"version":3,"file":"static/js/39.8c5285dc.chunk.js","mappings":"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","sources":["webpack://path-of-samurai/./src/pages/Profile/Profile.module.css?aa45","components/Profile/Status/StatusBlock.module.css","components/Profile/Status/StatusBlock.tsx","webpack://path-of-samurai/./src/components/Profile/Info/Info.module.css?f6fb","components/Profile/Info/Info.tsx","webpack://path-of-samurai/./src/components/Profile/Post/PostBlock/PostBlock.module.css?0934","webpack://path-of-samurai/./src/components/Profile/Post/PostItem/PostItem.module.css?91a7","components/Profile/Post/PostItem/PostItem.tsx","webpack://path-of-samurai/./src/components/Profile/Post/AddPostBlock/AddPostBlock.module.css?c118","components/Profile/Post/AddPostBlock/AddPostBlock.tsx","components/Profile/Post/AddPostBlock/AddPostContainer.tsx","components/Profile/Post/PostBlock/PostBlock.tsx","pages/Profile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_wrapper\":\"Profile_profile_wrapper__1sQ9M\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\nimport s from './StatusBlock.module.css'\nimport { getStatus, setStatus } from '../../../redux/slices/profileSlice'\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks'\n\ninterface IStatusBlockProps {\n    id: number\n}\n\nconst StatusBlock: React.FC<IStatusBlockProps> = ({ id }) => {\n    const user = useAppSelector(state => state.user.user)\n    const { status, statusText } = useAppSelector(\n        state => state.profile.profileStatus\n    )\n    const dispatch = useAppDispatch()\n    const [editing, setEditing] = React.useState(false)\n    const [value, setValue] = React.useState('')\n\n    const checkStatus = () => {\n        setValue(statusText)\n    }\n\n    const onClickSend = async () => {\n        setEditing(!editing)\n        if (statusText !== value) {\n            await dispatch(setStatus(value))\n            await dispatch(getStatus(id))\n        }\n    }\n\n    React.useEffect(() => {\n        dispatch(getStatus(id))\n        checkStatus()\n    }, [])\n\n    React.useEffect(() => {\n        checkStatus()\n    }, [statusText])\n\n    if (status === 'loading') {\n        return <div>...loading</div>\n    }\n\n    return (\n        <section className={s.wrapper}>\n            {editing && id === user.id ? (\n                <>\n                    <input\n                        onChange={e => setValue(e.target.value)}\n                        value={value}\n                        type={'text'}\n                    />\n                    <button onClick={onClickSend}>edit</button>\n                </>\n            ) : (\n                <p onClick={() => setEditing(!editing)}>\n                    {value ? value : 'status'}\n                </p>\n            )}\n        </section>\n    )\n}\n\nexport default StatusBlock\n","// extracted by mini-css-extract-plugin\nexport default {\"info_wrapper\":\"Info_info_wrapper__T2N7o\",\"text_wrapper\":\"Info_text_wrapper__EPW6L\",\"photo\":\"Info_photo__ZiQqB\",\"avatar\":\"Info_avatar__4RCoU\",\"text__name\":\"Info_text__name__qIFfk\",\"contactsItem\":\"Info_contactsItem__RGUqV\"};","import s from './Info.module.css'\nimport React, { ChangeEvent } from 'react'\nimport userPhoto from '../../../assets/images/user.png'\nimport { IUser } from '../../../utils/axios/types'\n\ninterface IInfoProps {\n    data: IUser\n    isOwner: boolean\n    handleClick: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nconst Info: React.FC<IInfoProps> = ({ data, isOwner, handleClick }) => {\n    return (\n        <section className={s.info_wrapper}>\n            <div className={s.photo}>\n                <img\n                    src={data.photos.large ? data.photos.large : userPhoto}\n                    className={s.avatar}\n                />\n                {isOwner && (\n                    <input onChange={e => handleClick(e)} type={'file'} />\n                )}\n            </div>\n            <div className={s.text_wrapper}>\n                <p className={s.text__name}>{data.fullName}</p>\n                <ul className={s.contacts}>\n                    <li className={s.contactsItem}>\n                        Facebook: {data.contacts.facebook}\n                    </li>\n                    <li className={s.contactsItem}>\n                        Github: {data.contacts.github}\n                    </li>\n                    <li className={s.contactsItem}>\n                        Instagram: {data.contacts.instagram}\n                    </li>\n                    <li className={s.contactsItem}>Vk: {data.contacts.vk}</li>\n                </ul>\n                <p className={s.text__birthday}>\n                    {data.lookingForAJob\n                        ? `Looking for a job: ${data.lookingForAJobDescription}`\n                        : ''}\n                </p>\n            </div>\n        </section>\n    )\n}\n\nexport default Info\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PostBlock_wrapper__VnWJz\",\"post_items\":\"PostBlock_post_items__9TGFJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PostItem_wrapper__NOGvx\",\"avatar\":\"PostItem_avatar__67uKj\",\"text\":\"PostItem_text__ddKOV\",\"name\":\"PostItem_name__Ye5-m\"};","import React from 'react'\nimport s from './PostItem.module.css'\n\ninterface IPostItemProps {\n    text: string\n    avatar: string\n    name: string\n}\n\nconst PostItem: React.FC<IPostItemProps> = ({ text, avatar, name }) => {\n    return (\n        <section className={s.wrapper}>\n            <img\n                src={\n                    avatar\n                        ? avatar\n                        : 'https://работазабкрай.рф/static/img/cabinet.png'\n                }\n                className={s.avatar}\n            />\n            <div>\n                <p className={s.name}>{name}</p>\n                <p className={s.text}>{text}</p>\n            </div>\n        </section>\n    )\n}\n\nexport default PostItem\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddPostBlock_wrapper__NuwqI\"};","import React from 'react'\nimport s from './AddPostBlock.module.css'\n\ninterface IAddPostBlockProps {\n    createPost: () => void\n    onPostChange: (text: string) => void\n    newPostText: string\n}\n\nconst AddPostBlock: React.FC<IAddPostBlockProps> = ({\n    createPost,\n    onPostChange,\n    newPostText,\n}) => {\n    const newPostElement = React.useRef(null)\n\n    return (\n        <section className={s.wrapper}>\n            <input\n                ref={newPostElement}\n                value={newPostText}\n                onChange={() => onPostChange(newPostElement.current.value)}\n                type='text'\n            />\n            <button onClick={createPost}>send</button>\n        </section>\n    )\n}\n\nexport default AddPostBlock\n","import {\n    addNewPost,\n    updateNewPostText,\n} from '../../../../redux/slices/profileSlice'\nimport { connect } from 'react-redux'\nimport AddPostBlock from './AddPostBlock'\nimport { RootState } from '../../../../redux/store'\n\nlet mapStateToProps = (state: RootState) => {\n    return {\n        newPostText: state.dialogs.newMessageText,\n    }\n}\n\nlet mapDispatchToProps = dispatch => {\n    return {\n        createPost: () => {\n            dispatch(addNewPost())\n        },\n        onPostChange: text => {\n            dispatch(updateNewPostText(text))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPostBlock)\n","import React from 'react'\nimport s from './PostBlock.module.css'\n\nimport PostItem from '../PostItem/PostItem'\nimport AddPostContainer from '../AddPostBlock/AddPostContainer'\nimport { useAppSelector } from '../../../../redux/hooks'\n\nconst PostBlock = () => {\n    const { posts } = useAppSelector(state => state.profile)\n\n    return (\n        <section className={s.wrapper}>\n            <AddPostContainer />\n            <div className={s.post_items}>\n                {posts.map(user => (\n                    <PostItem\n                        name={user.name}\n                        text={user.message}\n                        avatar={user.avatar ? user.avatar : ''}\n                        key={user.id}\n                    />\n                ))}\n            </div>\n        </section>\n    )\n}\n\nexport default PostBlock\n","import React from 'react'\nimport s from './Profile.module.css'\n\nimport { useLocation, useParams } from 'react-router-dom'\n\nimport { fetchUser } from '../../utils/axios/requests'\n\nimport StatusBlock from '../../components/Profile/Status/StatusBlock'\nimport Info from '../../components/Profile/Info/Info'\nimport PostBlock from '../../components/Profile/Post/PostBlock/PostBlock'\nimport { setPhoto } from '../../redux/slices/profileSlice'\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\nimport { IUser } from '../../utils/axios/types'\n\nconst Profile: React.FC = () => {\n    const user = useAppSelector(state => state.user.user)\n    const dispatch = useAppDispatch()\n    const [data, setData] = React.useState<IUser>(null)\n    const { id } = useParams()\n    const location = useLocation()\n    const onUploadFile = async e => {\n        const formData = new FormData()\n        formData.append('image', e.target.files[0])\n        await dispatch(setPhoto(formData))\n        await fetchMyProfile()\n    }\n\n    const fetchMyProfile = async () => {\n        fetchUser(user.id).then(res => {\n            setData(prev => ({ ...res }))\n        })\n    }\n    const fetchUserProfile = async id => {\n        fetchUser(id).then(res => {\n            setData(prev => ({ ...res }))\n        })\n    }\n\n    React.useEffect(() => {\n        if (id) {\n            fetchUserProfile(id)\n        } else {\n            fetchMyProfile()\n        }\n    }, [location])\n\n    if (!data) {\n        return <div>Loading...</div>\n    }\n\n    return (\n        <main className={`${s.profile_wrapper} ${s.page_wrapper}`}>\n            <Info handleClick={onUploadFile} data={data} isOwner={!id} />\n            <StatusBlock id={id ? +id : user.id} />\n            <PostBlock />\n        </main>\n    )\n}\n\nexport default Profile\n"],"names":["id","user","useAppSelector","state","profile","profileStatus","status","statusText","dispatch","useAppDispatch","React","editing","setEditing","value","setValue","checkStatus","onClickSend","setStatus","getStatus","className","s","onChange","e","target","type","onClick","data","isOwner","handleClick","src","photos","large","userPhoto","fullName","contacts","facebook","github","instagram","vk","lookingForAJob","lookingForAJobDescription","text","avatar","name","createPost","onPostChange","newPostText","newPostElement","ref","current","connect","dialogs","newMessageText","addNewPost","updateNewPostText","AddPostBlock","posts","AddPostContainer","map","message","setData","useParams","location","useLocation","onUploadFile","formData","FormData","append","files","setPhoto","fetchMyProfile","fetchUser","then","res","prev","fetchUserProfile"],"sourceRoot":""}