{"version":3,"file":"static/js/709.e7f7d775.chunk.js","mappings":"yNACA,EAA0B,uBAA1B,EAAyD,qBAAzD,EAA2F,0BAA3F,EAA6H,qBAA7H,EAA6J,wBAA7J,EAAgM,wBAAhM,EAAsO,2BAAtO,EAAgR,4B,iDCwGhR,EAlGc,WAAO,IAAD,UAChB,EAAoCA,EAAAA,SAAe,IAAnD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,EAAAA,UAAe,GAAnD,eAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0CJ,EAAAA,SAAe,IAAzD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA0CN,EAAAA,UAAe,GAAzD,eAAOO,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAf,IACzC,GAIIC,EAAAA,EAAAA,IAAQ,CACRC,cAAe,CACXC,MAAO,GACPC,SAAU,IAEdC,KAAM,aARNC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACaC,EAHjB,EAGIC,UAAaD,OASXE,EAAQ,yCAAG,WAAMC,GAAN,sFACPjB,GAASkB,EAAAA,EAAAA,KAAU,UAAKD,KADjB,uBAEPjB,GAASmB,EAAAA,EAAAA,OAFF,2CAAH,sDAKd,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAML,SAAUH,EAAaG,GAA7B,WACI,mCACA,iBAAKI,UAAWC,EAAhB,WACI,iBACID,UAAS,UAAKC,EAAL,YACL7B,GAAcE,EAAa2B,EAAiB,IAFpD,oBAOA,0BACI,0BACIC,QAAS,kBAAM3B,GAAc,EAApB,EACTyB,UAAS,UAAKC,EAAL,aACL,UAAAP,EAAOL,aAAP,eAAcc,UAAWF,GAE7BG,KAAM,QACFZ,EAAS,QAAS,CAClBa,SAAU,mDACVC,MAAOlC,EACPmC,SAAU,SAAAC,GAAC,OAAInC,EAAcmC,EAAEC,OAAOH,MAA3B,EACXI,OAAQ,kBAAMnC,GAAc,EAApB,SAIpB,uBAAI,UAAAmB,EAAOL,aAAP,SAAcc,QAAd,UAAwBT,EAAOL,aAA/B,aAAwB,EAAcc,QAAU,SAExD,iBAAKH,UAAWC,EAAhB,WACI,iBACID,UAAS,UAAKC,EAAL,YACLzB,GAAiBE,EAAgBuB,EAAiB,IAF1D,uBAOA,4BACI,0BACID,UAAS,UAAKC,EAAL,aACL,UAAAP,EAAOJ,gBAAP,eAAiBa,UAAWF,GAEhCC,QAAS,kBAAMvB,GAAiB,EAAvB,EACTyB,KAAM,QACFZ,EAAS,WAAY,CACrBa,SAAU,kFACVM,UAAW,CACPL,MAAO,EACPH,QACI,qNAERS,UAAW,CACPN,MAAO,GACPH,QACI,qNAERG,MAAO9B,EACP+B,SAAU,SAAAC,GAAC,OAAI/B,EAAiB+B,EAAEC,OAAOH,MAA9B,EACXI,OAAQ,kBAAM/B,GAAiB,EAAvB,OAGhB,wBAAI,UAAAe,EAAOJ,gBAAP,eAAiBa,UAAWrB,WAGxC,iBAAKkB,UAAWC,EAAhB,WACI,0BAAOG,KAAM,YAAgBZ,EAAS,aAAc,CAAC,MACrD,4CAEJ,SAACqB,EAAA,EAAD,CAAQT,KAAM,SAAd,wBAIf,C","sources":["webpack://path-of-samurai/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__M0Qkx\",\"input\":\"Login_input__NaAkZ\",\"inputError\":\"Login_inputError__HJloB\",\"login\":\"Login_login__71TO9\",\"password\":\"Login_password__zpf1-\",\"remember\":\"Login_remember__xCy5q\",\"placeHolder\":\"Login_placeHolder__tFz1k\",\"activeHolder\":\"Login_activeHolder__JsB+g\"};","import React from 'react'\nimport s from './Login.module.css'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkAuthData, loginAuth } from '../../redux/slices/userSlice'\nimport { Button } from '../../components/Button/Button'\n\nconst Login = () => {\n    const [valueLogin, setValueLogin] = React.useState('')\n    const [loginFocus, setLoginFocus] = React.useState(false)\n    const [valueRegister, setValueRegister] = React.useState('')\n    const [registerFocus, setRegisterFocus] = React.useState(false)\n    const dispatch = useDispatch()\n    const asyncValidError = useSelector(state => state.user.validError)\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            email: '',\n            password: '',\n        },\n        mode: 'onSubmit',\n    })\n\n    const onSubmit = async values => {\n        await dispatch(loginAuth({ ...values }))\n        await dispatch(checkAuthData())\n    }\n\n    return (\n        <div className={s.wrapper}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <h1>Login</h1>\n                <div className={s.login}>\n                    <span\n                        className={`${s.placeHolder} ${\n                            valueLogin || loginFocus ? s.activeHolder : ''\n                        }`}\n                    >\n                        Login\n                    </span>\n                    <div>\n                        <input\n                            onFocus={() => setLoginFocus(true)}\n                            className={`${s.input} ${\n                                errors.email?.message && s.inputError\n                            }`}\n                            type={'text'}\n                            {...register('email', {\n                                required: 'Укажите email',\n                                value: valueLogin,\n                                onChange: e => setValueLogin(e.target.value),\n                                onBlur: () => setLoginFocus(false),\n                            })}\n                        />\n                    </div>\n                    <p>{errors.email?.message ? errors.email?.message : ''}</p>\n                </div>\n                <div className={s.password}>\n                    <span\n                        className={`${s.placeHolder} ${\n                            valueRegister || registerFocus ? s.activeHolder : ''\n                        }`}\n                    >\n                        Password\n                    </span>\n                    <div>\n                        <input\n                            className={`${s.input} ${\n                                errors.password?.message && s.inputError\n                            }`}\n                            onFocus={() => setRegisterFocus(true)}\n                            type={'text'}\n                            {...register('password', {\n                                required: 'Укажите пароль',\n                                minLength: {\n                                    value: 4,\n                                    message:\n                                        'Пароль должен содержать от 4 до 14 символов.',\n                                },\n                                maxLength: {\n                                    value: 14,\n                                    message:\n                                        'Пароль должен содержать от 4 до 14 символов.',\n                                },\n                                value: valueRegister,\n                                onChange: e => setValueRegister(e.target.value),\n                                onBlur: () => setRegisterFocus(false),\n                            })}\n                        />\n                        <p>{errors.password?.message || asyncValidError}</p>\n                    </div>\n                </div>\n                <div className={s.remember}>\n                    <input type={'checkbox'} {...register('rememberMe', {})} />\n                    <label>remember</label>\n                </div>\n                <Button type={'submit'}>submit</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Login\n"],"names":["React","valueLogin","setValueLogin","loginFocus","setLoginFocus","valueRegister","setValueRegister","registerFocus","setRegisterFocus","dispatch","useDispatch","asyncValidError","useSelector","state","user","validError","useForm","defaultValues","email","password","mode","register","handleSubmit","errors","formState","onSubmit","values","loginAuth","checkAuthData","className","s","onFocus","message","type","required","value","onChange","e","target","onBlur","minLength","maxLength","Button"],"sourceRoot":""}